.row {
    z-index: 1;
}
    
    h1 {
        max-width: 80vw;
        @media screen and (min-width: 768px) {
            max-width: initial;
        }
    }
    .pc {
        position: relative;
        z-index: 1;
        max-width: 350px;
        @media screen and (min-width: 768px) {
            max-width: 500px;
        }
        
        animation: top-down infinite ease-in-out;
        animation-duration: 3s;
        animation-delay: .3s;
        @keyframes top-down {
            0% {
                transform: translateY(0);
            }
            50% {
                transform: translateY(-10px);
            }
            100% {
                transform: translateY(0);
            }
        }
    }
.dyno {
    @media screen and (min-width: 992px) {
        position: absolute;
        top: 0;
        right: 0;
        z-index: 0;
    }
}

// Particles

// best in chrome
$total: 300; // total particles
$orb-size: 100px;
$particle-size: 2px;
$time: 14s; 
$base-hue: 0; // change for diff colors (180 is nice)

.wrap {
  position: relative;
  top: -160px;
  left: 60%;
  width: 0; 
  height: 0; 
  z-index: 9;
  transform-style: preserve-3d;
  perspective: 1000px;
  animation: rotate $time infinite linear; // rotate orb
  @media screen and (min-width: 992px) {
    top: -220px;
    left: 40%;
  }
}

@keyframes rotate {
  100% {
    transform: rotateY(360deg) rotateX(360deg);
  }
}

.c {
  position: absolute;
  width: $particle-size;
  height: $particle-size;
  border-radius: 50%;
  opacity: 0; 
}

@for $i from 1 through $total {
  $z: (random(360) * 1deg); // random angle to rotateZ
  $y: (random(360) * 1deg); // random to rotateX
  $hue: (calc(40/$total * $i) + $base-hue); // set hue
  
  .c:nth-child(#{$i}){ // grab the nth particle
    animation: orbit#{$i} $time infinite;
    animation-delay: ($i * .01s); 
    background-color: hsla($hue, 100%, 50%, 1);
  }

  @keyframes orbit#{$i}{ 
    20% {
      opacity: 1; // fade in
    }
    30% {
      transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z); // form orb
    }
    80% {
      transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z); // hold orb state 30-80
      opacity: 1; // hold opacity 20-80
    }
    100% {
       transform: rotateZ(-$z) rotateY($y) translateX( ($orb-size * 3) ) rotateZ($z); // translateX * 3
    }
  }
}